// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\julio\OneDrive\Documentos\GitHub\pds\ANote\server\internal\interfaces\repositories\noteTagRepository.go

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	domain "anote/internal/domain"
	errors "anote/internal/errors"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNoteTagRepository is a mock of NoteTagRepository interface.
type MockNoteTagRepository struct {
	ctrl     *gomock.Controller
	recorder *MockNoteTagRepositoryMockRecorder
}

// MockNoteTagRepositoryMockRecorder is the mock recorder for MockNoteTagRepository.
type MockNoteTagRepositoryMockRecorder struct {
	mock *MockNoteTagRepository
}

// NewMockNoteTagRepository creates a new mock instance.
func NewMockNoteTagRepository(ctrl *gomock.Controller) *MockNoteTagRepository {
	mock := &MockNoteTagRepository{ctrl: ctrl}
	mock.recorder = &MockNoteTagRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNoteTagRepository) EXPECT() *MockNoteTagRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockNoteTagRepository) Create(noteTag *domain.Tag) *errors.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", noteTag)
	ret0, _ := ret[0].(*errors.AppError)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockNoteTagRepositoryMockRecorder) Create(noteTag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockNoteTagRepository)(nil).Create), noteTag)
}

// Delete mocks base method.
func (m *MockNoteTagRepository) Delete(id string) *errors.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", id)
	ret0, _ := ret[0].(*errors.AppError)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockNoteTagRepositoryMockRecorder) Delete(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockNoteTagRepository)(nil).Delete), id)
}

// GetAll mocks base method.
func (m *MockNoteTagRepository) GetAll() ([]domain.Tag, *errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]domain.Tag)
	ret1, _ := ret[1].(*errors.AppError)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockNoteTagRepositoryMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockNoteTagRepository)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockNoteTagRepository) GetById(id string) (*domain.Tag, *errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(*domain.Tag)
	ret1, _ := ret[1].(*errors.AppError)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockNoteTagRepositoryMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockNoteTagRepository)(nil).GetById), id)
}

// GetByName mocks base method.
func (m *MockNoteTagRepository) GetByName(tagName string) (*domain.Tag, *errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByName", tagName)
	ret0, _ := ret[0].(*domain.Tag)
	ret1, _ := ret[1].(*errors.AppError)
	return ret0, ret1
}

// GetByName indicates an expected call of GetByName.
func (mr *MockNoteTagRepositoryMockRecorder) GetByName(tagName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByName", reflect.TypeOf((*MockNoteTagRepository)(nil).GetByName), tagName)
}

// GetByNoteId mocks base method.
func (m *MockNoteTagRepository) GetByNoteId(noteId string) ([]domain.Tag, *errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByNoteId", noteId)
	ret0, _ := ret[0].([]domain.Tag)
	ret1, _ := ret[1].(*errors.AppError)
	return ret0, ret1
}

// GetByNoteId indicates an expected call of GetByNoteId.
func (mr *MockNoteTagRepositoryMockRecorder) GetByNoteId(noteId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByNoteId", reflect.TypeOf((*MockNoteTagRepository)(nil).GetByNoteId), noteId)
}
