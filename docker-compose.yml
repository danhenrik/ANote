version: "3.7"

services:
  database:
    container_name: database
    build:
      dockerfile: dockerfile
      context: ./infra/postgres
    restart: always
    environment:
      POSTGRES_USER: anote
      POSTGRES_PASSWORD: anote
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./infra/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    entrypoint: docker-entrypoint.sh -c 'config_file=/etc/postgresql/postgresql.conf'

  adminer:
    container_name: adminer
    image: adminer:4
    depends_on:
      - database
    restart: always
    ports:
      - "3002:8080"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.1
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.10.1
    depends_on:
      - elasticsearch
    ports:
      - "3003:5601"
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - kbn-data:/usr/share/kibana/data

  setup:
    container_name: setup
    build:
      dockerfile: dockerfile
      context: ./infra/setup
    volumes:
      - ./infra/setup/setup.py:/setup/setup.py
    depends_on:
      - elasticsearch
      - database

  client:
    container_name: client
    build:
      dockerfile: dockerfile
      context: ./client
    volumes:
      - ./client/src:/app/src
    ports:
      - "3000:3000"

  server:
    container_name: server
    build:
      dockerfile: dockerfile
      context: ./server
    environment:
      - ENV=PRD
      - DB_ADDR=database
      - ES_ADDR=elasticsearch
      - PG_DATABASE=anote
      - PG_USER=anote
      - PG_PASSWORD=anote
      - JWT_SECRET=secret
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - elasticsearch
      - database
    volumes:
      - ./server/cmd:/app/cmd
      - ./server/internal:/app/internal

  es_replicate:
    container_name: es_replicate
    restart: always
    build:
      dockerfile: dockerfile
      context: ./infra/es_replicate
    environment:
      - DB_ADDR=database
      - ES_ADDR=elasticsearch
      - PG_DATABASE=anote
      - PG_USER=anote
      - PG_PASSWORD=anote
    depends_on:
      - database
      - elasticsearch
    ports:
      - "1:1"

volumes:
  pg-data:
  es-data:
  kbn-data:
